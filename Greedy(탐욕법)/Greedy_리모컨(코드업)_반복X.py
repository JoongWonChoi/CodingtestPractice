###Greedy_리모컨(코드업) - 반복 없이###

## my algorithm ##
#현재 온도 n에서 목표 온도 k까지, +1/-1, +5/-5, +10/-10 총 6가지 조작을 통해 목표온도 k까지 도달하는 최소 횟수를 찾아야한다.
#거스름돈(코드업)문제의 경우와 같이, 반복문을 사용하지 않고 다중 if문들로 문제를 해결하며 내려갈 수 있다는 생각이 들었다.
#따라서 마찬가지로, 반복문을 없애고 코드를 내려가면서 온전한 if문들로 문제를 해결하면 마지막 단계까지 상수 횟수로 자연스럽게 흘러 내려 갈 수 있을 것이다.

##시간복잡도##
#반복문 없이, 여러 회의 조건문과 연산을 통해 문제 해결 가능하다.
#worst case : O(1)

def remote_con(n,k):
    answer = 0
    ##추가 : 목표 온도 k가 현재 온도 n보다 낮은 경우도 따져야함!
    #조작해야하는 온도
    key = 0
    if k>n : key = k-n
    else : key = n-k

    ###반복 없이 조건을 따져가며 key를 차감시키며 한 번의 round로 진행!!###

    #key가 10보다 크면, 항상 10단위로 조작해야 횟수를 크게 감소시킬 수 있다.
    if key >= 10:
        answer += key // 10
        key %= 10
    #key는 이제 기존 key를 10으로 나눈 나머지 값을 적용하였으므로 다시 if 조건문을 통해 조건 판별.
    if key < 10:
        #key가 5보다 큰 경우
        if key>5:
            #10으로부터 가까운지, 5로부터 가까운지 판단
            a = 10 % key
            b = key % 5
            if a > b: # 5로부터 가까우면 +5 한 후에 나머지 값들만큼 더해주기
                answer += b + 1 #5한번 + (1 * b)
            else : answer += a + 1 #그렇지 않으면 +10 한 후 나머지 값들만큼 빼주기
       #key가 5인 경우 +5만 해주면 됨.
        elif key == 5:
            answer += 1
        #key가 5보다 작을 경우, 5로부터 가까운지 0으로부터 가까운지 판단
        else:
            if key>2:
                answer += (5-key) + 1 #+5 한 후에 나머지 값들만큼 빼주기
            else :
                answer += key # 나머지 값들만큼 더해주기

    return answer

n, k = [int(x) for x in input().split()]
print(remote_con(n,k))